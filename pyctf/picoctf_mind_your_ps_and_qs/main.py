from Crypto.Util.number import inverse


c = 62324783949134119159408816513334912534343517300880137691662780895409992760262021
n = 1280678415822214057864524798453297819181910621573945477544758171055968245116423923
e = 65537

if __name__ == "__main__":
    # factordb.com
    p = 1899107986527483535344517113948531328331
    q = 674357869540600933870145899564746495319033

    # print(n == p * q)

    phi = (p - 1) * (q - 1)

    d = inverse(e, phi)
    # d = pow(e, -1, phi)

    m = pow(c, d, n)

    ans = bytes.fromhex(hex(m)[2:]).decode("ascii")
    print(ans)
